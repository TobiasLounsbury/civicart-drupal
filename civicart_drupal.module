<?php

function civicart_drupal_token_info() {

  if(!civicrm_initialize()) {
    return;
  }

  $info['types']['civicart'] = array(
    'name' => t('CiviCart'),
    'description' => t('Tokens for use with the CiviCRM Shopping Cart.'),
  );

  /*
  $info['tokens']['civicart']['example'] = array(
    'name' => t('Example Token Title'),
    'description' => t('Example CiviCRM Shopping Cart Token Description'),
  );
  */

  $items = CRM_Civicart_Tokens::getCartItems();
  $types = array(
    "full" => "Adds item description and 'Add to Cart' buttons for %NAME%",
    "button" => "Adds 'Add to Cart' buttons for %NAME%",
    "description" => "Adds item description for %NAME%"
  );

  foreach($items as $item) {
    foreach($types as $type => $typeDescription) {

      $info['tokens']['civicart']["item:{$item['id']}:{$type}:{$item['name']}"] = array(
        'name' => "{$item['label']} - {$type}",
        'description' => str_replace("%NAME%", $item['label'], $typeDescription),
      );

      //todo: Handle individual checkbox items

    }
  }

  $info['tokens']['civicart']["cart:count"] = array(
    'name' => "Item Count",
    'description' => "Returns the number of items in the cart",
  );

  $info['tokens']['civicart']["cart:url"] = array(
    'name' => "Cart Url",
    'description' => "Returns the url to send the user to view the cart",
  );


  return $info;
}

function civicart_drupal_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();

  if(!civicrm_initialize()) {
    return $replacements;
  }


  if ($type == 'civicart') {
    $addLibrary = false;
    foreach($tokens as $parsed => $fullToken) {

      //[civicart:item:5:full]
      //[civicart:option:25:button]

      //Parse the token
      $parts = explode(":", $parsed);

      if($parts[0] == "cart") {

        if($parts[1] == "url") {
          $replacements[$fullToken] = CRM_Civicart_Utils::getCartLink();
          continue;
        }

        if($parts[1] == "count") {
          $replacements[$fullToken] = "<span class='civicart-cart-item-count'>" . CRM_Civicart_Utils::getCartCount() . "</span>";
          continue;
        }


      } else {
        //Delegate content generation to civi functions
        $replacements[$fullToken] = CRM_Civicart_Tokens::getItemContent($parts[1], $parts[0], $parts[2]);
        $addLibrary = ($addLibrary || ($replacements[$fullToken]));
      }
    }

    //Add library resources to the page.
    if($addLibrary) {
      $resources = CRM_Civicart_Utils::getLibraryResources();
      foreach($resources['js'] as $file) {
        drupal_add_js($file, array("preprocess" => false));
      }

      foreach($resources['css'] as $file) {
        drupal_add_css($file, array("preprocess" => false));
      }

    }
  }

  return $replacements;
}